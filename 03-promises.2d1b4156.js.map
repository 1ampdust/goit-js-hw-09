{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAcC,SAASC,cAAc,SAsB3C,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA7BbL,EAAYY,iBAAiB,UAAUC,IACrCA,EAAIC,iBAEJ,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAIG,cAAcC,OAAOC,MAAOH,IAAK,CAMvDZ,EALeY,EAAI,EAGjBI,OAAON,EAAIG,cAAcX,MAAMa,OAC/BC,OAAON,EAAIG,cAAcI,KAAKF,OAASH,GAEtCM,MAAKC,IACJC,EAAAzB,GAAS0B,OAAOC,QAAQH,GACxBtB,EAAY0B,OAAO,IAEpBC,OAAML,IACLC,EAAAzB,GAAS0B,OAAOI,QAAQN,EAAQ,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formPromise = document.querySelector('.form');\n\nformPromise.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  for (let i = 0; i < evt.currentTarget.amount.value; i++) {\n    let position = i + 1;\n\n    let passedStep =\n      Number(evt.currentTarget.delay.value) +\n      Number(evt.currentTarget.step.value) * i;\n    createPromise(position, passedStep)\n      .then(message => {\n        Notiflix.Notify.success(message);\n        formPromise.reset();\n      })\n      .catch(message => {\n        Notiflix.Notify.failure(message);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formPromise","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","i","currentTarget","amount","value","Number","step","then","message","$parcel$interopDefault","Notify","success","reset","catch","failure"],"version":3,"file":"03-promises.2d1b4156.js.map"}